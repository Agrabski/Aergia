T__0=1
T__1=2
T__2=3
T__3=4
T__4=5
T__5=6
T__6=7
T__7=8
T__8=9
T__9=10
T__10=11
T__11=12
T__12=13
T__13=14
T__14=15
Encodingprefix=16
MultiLineMacro=17
Directive=18
Alignas=19
Alignof=20
Asm=21
Auto=22
Bool=23
Break=24
Case=25
Catch=26
Char=27
Char16=28
Char32=29
Class=30
Const=31
Constexpr=32
Const_cast=33
Continue=34
Decltype=35
Default=36
Delete=37
Do=38
Double=39
Dynamic_cast=40
Else=41
Enum=42
Explicit=43
Export=44
Extern=45
False=46
Final=47
Float=48
For=49
Friend=50
Goto=51
If=52
Inline=53
Int=54
Long=55
Mutable=56
Namespace=57
New=58
Noexcept=59
Nullptr=60
Operator=61
Override=62
Private=63
Protected=64
Public=65
Register=66
Reinterpret_cast=67
Return=68
Short=69
Signed=70
Sizeof=71
Static=72
Static_assert=73
Static_cast=74
Struct=75
Switch=76
Template=77
This=78
Thread_local=79
Throw=80
True=81
Try=82
Typedef=83
Typeid_=84
Typename_=85
Union=86
Unsigned=87
Using=88
Virtual=89
Void=90
Volatile=91
Wchar=92
While=93
LeftParen=94
RightParen=95
LeftBracket=96
RightBracket=97
LeftBrace=98
RightBrace=99
Plus=100
Minus=101
Star=102
Div=103
Mod=104
Caret=105
And=106
Or=107
Tilde=108
Not=109
Assign=110
Less=111
Greater=112
PlusAssign=113
MinusAssign=114
StarAssign=115
DivAssign=116
ModAssign=117
XorAssign=118
AndAssign=119
OrAssign=120
LeftShift=121
RightShift=122
LeftShiftAssign=123
RightShiftAssign=124
Equal=125
NotEqual=126
LessEqual=127
GreaterEqual=128
AndAnd=129
OrOr=130
PlusPlus=131
MinusMinus=132
Comma=133
ArrowStar=134
Arrow=135
Question=136
Colon=137
Doublecolon=138
Semi=139
Dot=140
DotStar=141
Ellipsis=142
Identifier=143
Integerliteral=144
Decimalliteral=145
Octalliteral=146
Hexadecimalliteral=147
Binaryliteral=148
Integersuffix=149
Characterliteral=150
Floatingliteral=151
Stringliteral=152
Userdefinedintegerliteral=153
Userdefinedfloatingliteral=154
Userdefinedstringliteral=155
Userdefinedcharacterliteral=156
Whitespace=157
Newline=158
BlockComment=159
LineComment=160
'$'=1
'$$'=2
'${'=3
'$}'=4
'anonymous'=5
'@'=6
'$foreach('=7
'in'=8
').'=9
'!'=10
'not'=11
'&&'=12
'and'=13
'||'=14
'or'=15
'alignas'=19
'alignof'=20
'asm'=21
'auto'=22
'bool'=23
'break'=24
'case'=25
'catch'=26
'char'=27
'char16_t'=28
'char32_t'=29
'class'=30
'const'=31
'constexpr'=32
'const_cast'=33
'continue'=34
'decltype'=35
'default'=36
'delete'=37
'do'=38
'double'=39
'dynamic_cast'=40
'else'=41
'enum'=42
'explicit'=43
'export'=44
'extern'=45
'false'=46
'final'=47
'float'=48
'for'=49
'friend'=50
'goto'=51
'if'=52
'inline'=53
'int'=54
'long'=55
'mutable'=56
'namespace'=57
'new'=58
'noexcept'=59
'nullptr'=60
'operator'=61
'override'=62
'private'=63
'protected'=64
'public'=65
'register'=66
'reinterpret_cast'=67
'return'=68
'short'=69
'signed'=70
'sizeof'=71
'static'=72
'static_assert'=73
'static_cast'=74
'struct'=75
'switch'=76
'template'=77
'this'=78
'thread_local'=79
'throw'=80
'true'=81
'try'=82
'typedef'=83
'typeid'=84
'typename'=85
'union'=86
'unsigned'=87
'using'=88
'virtual'=89
'void'=90
'volatile'=91
'wchar_t'=92
'while'=93
'('=94
')'=95
'['=96
']'=97
'{'=98
'}'=99
'+'=100
'-'=101
'*'=102
'/'=103
'%'=104
'^'=105
'&'=106
'|'=107
'~'=108
'='=110
'<'=111
'>'=112
'+='=113
'-='=114
'*='=115
'/='=116
'%='=117
'^='=118
'&='=119
'|='=120
'<<'=121
'>>'=122
'<<='=123
'>>='=124
'=='=125
'!='=126
'<='=127
'>='=128
'++'=131
'--'=132
','=133
'->*'=134
'->'=135
'?'=136
':'=137
'::'=138
';'=139
'.'=140
'.*'=141
'...'=142
